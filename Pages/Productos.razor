@page "/Productos"

@using System.ComponentModel.DataAnnotations
@using System.Collections.Generic

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet">

<h3>Productos</h3>

<EditForm Model="producto" FormName="formProductos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    @if (mostrarAlerta)
    {
        <div class="alert alert-danger" role="alert">
            El número de inventario se encuentra registrado. Debe ser único.
        </div>
    }
    <div class="form-group mb-4">
        <label for="inventario">Inventario</label>
        <div>
            <InputNumber class="form-control" id="inventario" @bind-Value="producto.Id" />
            <ValidationMessage For="@(()=>producto.Id)" />
        </div>
    </div>
    <div class="form-group mb-4">
        <label for="nombre">Nombre</label>
        <div>
            <InputText class="form-control" id="nombre" @bind-Value="producto.Nombre" />
            <ValidationMessage For="@(()=>producto.Nombre)" />
        </div>
    </div>
    <div class="form-group mb-4">
        <label>Departamento</label>
        <div>
            <InputRadioGroup class="form-control" id="frutas" @bind-Value="producto.Departamento">
                <InputRadio class="form-check-input"
                            id="frutas"
                            Value="@("Frutas")" />
                <label for="rdbFrutas"
                       class="form-check-inline">Frutas</label>
            </InputRadioGroup>
            <InputRadioGroup class="form-control" id="verd" @bind-Value="producto.Departamento">
                <InputRadio class="form-check-input"
                            id="verduras"
                            Value="@("Verduras")" />
                <label for="rdbVerduras"
                       class="form-check-inline">Verduras</label>
            </InputRadioGroup>
            <InputRadioGroup class="form-control" id="lacteos" @bind-Value="producto.Departamento">
                <InputRadio class="form-check-input"
                            id="lacteos"
                            Value="@("Lácteos")" />
                <label for="rdbLacteos"
                       class="form-check-inline">Lácteos</label>
            </InputRadioGroup>
            <ValidationMessage For="@(()=>producto.Departamento)" />
        </div>
    </div>
    @if (modoEdicion)
    {
        <button type="submit" class="btn btn-outline-primary mb-3">Actualizar</button>
        <button type="button" class="btn btn-outline-danger mb-3" @onclick="CancelarEdicion">Cancelar</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary mb-3">Guardar</button>
    }
</EditForm>
@if (modoListado)
{
    <button type="button" class="btn btn-secondary mb-3" @onclick="() => modoListado = false">Existencias</button>
}
else
{
    <button type="submit" class="btn btn-secondary mb-3" @onclick="() => modoListado = true">Listado</button>
}

@if (productos.Any())
{
    @if (modoListado)
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Inventario</th>
                    <th>Nombre</th>
                    <th>Departamento</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in productos)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Nombre</td>
                        <td>@item.Departamento</td>
                        <td>
                            <button class="btn  btn-sm" @onclick="() => Eliminar(item)">
                                <i class="bi bi-trash3-fill"></i>
                            </button>
                            <button class="btn btn-sm" @onclick="() => Editar(item.Id)">
                                <i class="bi bi-pencil-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Frutas</th>
                    <th>Verduras</th>
                    <th>Lácteos</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@productos.Count(p => p.Departamento == "Frutas")</td>
                    <td>@productos.Count(p => p.Departamento == "Verduras")</td>
                    <td>@productos.Count(p => p.Departamento == "Lácteos")</td>
                </tr>
            </tbody>
        </table>
    }
}

@code {
    private List<Producto> productos = new List<Producto>();
    private Producto producto = new Producto();
    private bool mostrarAlerta = false;
    private bool modoEdicion = false;
    private bool modoListado = true;
    private int idEdicion;

    void Guardar()
    {
        if (!modoEdicion)
        {
            if (productos.Any(p => p.Id == producto.Id))
            {
                mostrarAlerta = true;
            }
            else
            {
                productos.Add(producto);
                producto = new Producto();
                mostrarAlerta = false;
                modoEdicion = false;
            }
        }
        else
        {
            if (productos.Any(p => p.Id == producto.Id && p.Id != idEdicion))
            {
                mostrarAlerta = true;
            }
            else
            {
                Producto productoAux = productos.Where(x => x.Id == idEdicion).First();
                productoAux.Nombre = producto.Nombre;
                productoAux.Departamento = producto.Departamento;
                productoAux.Id = producto.Id;
                producto = new Producto();
                mostrarAlerta = false;
                modoEdicion = false;
            }
        }
    }

    void Eliminar(Producto producto)
    {
        productos.Remove(producto);
    }

    void Editar(int id)
    {
        mostrarAlerta = false;
        modoEdicion = true;
        Producto productoAux = productos.Where(x => x.Id == id).First();
        producto.Id = productoAux.Id;
        producto.Nombre = productoAux.Nombre;
        producto.Departamento = productoAux.Departamento;
        idEdicion = id;
    }

    void CancelarEdicion()
    {
        producto = new Producto();
        mostrarAlerta = false;
        modoEdicion = false;
    }
   
    public class Producto
    {
        
        [Required(ErrorMessage = "Ingresa un número entero positivo mayor a 0")]
        [Range(1, 100, ErrorMessage = "Ingresa un número entero positivo mayor a 0")]
        public int Id { get; set; }

        
        [Required(ErrorMessage = "El nombre no debe ser vacío")]
        [MaxLength(100, ErrorMessage = "El nombre no debe exceder 200 caracteres")]
        public string Nombre { get; set; }

        
        
        [Required(ErrorMessage = "Debe seleccionar un departamento")]
        public string Departamento { get; set; }
    }



}